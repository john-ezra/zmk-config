/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

//Layer Aliases
#define DEFAULT 0
#define WINDOWS 1
#define LOWER 2
#define RAISE 3

//Mod Tap Aliases
#define CMD_BSP &mt LGUI BSPC
#define CTL_BSP &mt LCTL BSPC
#define SFT_ENT &mt LSHFT RET
#define ALT_ESC &mt LALT ESC

//Hold Tap Defines
#define COPY &ht LG(C) LG(V)
#define FIND &ht LG(A) LG(F)
#define UNDO &ht LG(Y) LG(Z)
#define W_COPY &ht LC(C) LC(V)
#define W_FIND &ht LC(A) LC(F)
#define W_UNDO &ht LC(Y) LC(Z)
#define MSN_CTL &ht LCTL LC(UP)

/ {
	behaviors {
	    ht: hold_tap {
	            compatible = "zmk,behavior-hold-tap";
	            label = "HT";
	            #binding-cells = <2>;
	            tapping-term-ms = <250>;
	            quick-tap-ms = <150>;
	            flavor = "tap-preferred";
	            bindings = <&kp>, <&kp>;
	    };
		};
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			label = "DEFAULT";
			bindings = <
			FIND &kp Z &kp R &kp L    &kp D    &kp W                                           &kp Y &kp P    &kp U     &kp X   &kp Q    &kp BSLH
			COPY &kp H &kp N &kp T    &kp S    &kp C                                           &kp B &kp I    &kp E     &kp O   &kp A    &kp GRAVE
			UNDO &kp K &kp V &kp M    &kp F    &kp G ALT_ESC   MSN_CTL       MSN_CTL ALT_ESC   &kp J &kp SEMI &kp COMMA &kp DOT &kp FSLH &kp SQT
	                     &kp LCTL SFT_ENT  &mo 2 &kp SPACE CMD_BSP       &kp TAB SFT_ENT   &mo 3 &kp DEL  &kp CAPS
			>;
		};
		windows_layer {
			label = "WINDOWS";
			bindings = <
			W_FIND &kp Z &kp R &kp L    &kp D    &kp W                                       &kp Y &kp P    &kp U     &kp X   &kp Q    &kp BSLH
			W_COPY &kp H &kp N &kp T    &kp S    &kp C                                       &kp B &kp I    &kp E     &kp O   &kp A    &kp GRAVE
			W_UNDO &kp K &kp V &kp M    &kp F    &kp G ALT_ESC   &kp LGUI    &kp RET ALT_ESC &kp J &kp SEMI &kp COMMA &kp DOT &kp FSLH &kp SQT
										     &kp LGUI SFT_ENT  &mo 2 &kp SPACE CTL_BSP     &kp TAB SFT_ENT &mo 3 &kp DEL  &kp CAPS
			>;
		};
    lower_layer {
			label = "LOWER";
			bindings = <
			&kp TAB &kp STAR     &kp FSLH     &kp PLUS   &kp MINUS  &kp EQUAL                                 &kp PIPE  &kp LBRC  &kp RBRC &kp AT    &kp EXCL  &kp GRAVE
			&kp RET &kp LEFT     &kp UP       &kp DOWN   &kp RIGHT  &trans                                    &kp BSLH  &kp LPAR  &kp RPAR &kp DLLR  &kp HASH  &kp TILDE
			&kp ESC &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV &kp C_PLAY &kp C_NEXT &trans &trans    &trans &trans &kp UNDER &kp LBKT  &kp RBKT &kp CARET &kp PRCNT &kp AMPS
	                                      &trans     &trans     &trans     &trans &trans    &trans &trans &trans    &trans  &trans
			>;
    };
    raise_layer {
			label = "RAISE";
      bindings = <
			&trans     &kp F1     &kp F2     &kp F3       &kp F4 &kp F5                                              &kp F6 &kp F7   &kp F8 &kp F9   &kp F10   &kp F11
			&trans     &kp N1     &kp N2     &kp N3       &kp N4 &kp N5                                              &kp N6 &kp N7   &kp N8 &kp N9   &kp N0    &kp F12
			&bt BT_CLR &bt BT_PRV &bt BT_NXT &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans &trans      &to 0  &to 1  &tog 1 &kp LEFT &kp UP &kp DOWN &kp RIGHT &kp ESC
			                                 &trans       &trans       &trans       &trans &trans      &trans &trans &trans &trans   &ext_power EP_OFF
      >;
    };
	};
};

//cp -X kyria_left-nice_nano_v2-zmk.uf2 /Volumes/NICENANO/
//cp -X kyria_right-nice_nano_v2-zmk.uf2 /Volumes/NICENANO/
